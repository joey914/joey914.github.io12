---
layout: post
title:  "[Python] 3장 조건부실행"
date:   2017-03-17 10:30:27 -0800
tags: [Sunrin, Python]
author: Jooholee
description: "선린인터넷고 웹 프로그래밍 시간에 학습한 조건부 실행에 관한 내용입니다."
---

불 표현식

	- 불 표현식 (boolean expression)은 참, 또는 거짓을 지닌 표현시입니다.
	- 참과 거짓은 불 자료형에 속하는 특별한 값이지만, 문자열은 아닙니다.

논리 연산자

	- and, or, not으로 총 세개의 논리 연산자가 있는데, 이들 의미는 영어 의미와 유사합니다.

	- and : 두 조건문이 전부 참이 되면 참을 반환합니다.

	- or : 두 조건문 중 하나라도 참이되면 참을 반환합니다.

	- not : 불 연산 표현식을 부정해 참이면 거짓, 거짓이면 참으로 반환합니다.

	- 추가적으로, 0이 아닌 임의의 숫자 모두 참으로 반환합니다.

조건문 실행

	- if문의 인자값으로 불 표현식이 들어오는데, 'if (불 표현식) :' 과 같은 방식으로 쓰이며 조건에 맞는다면 들여쓰기 된 값이 실행됩니다.

	- else나 elif와 같은 방식으로 if 안의 불 표현식이 거짓일 때, 대안 실행을 할 수 있습니다.

	- 대안을 분기라고도 하는데, 이유는 실행 흐름이 분기되기 때문입니다.

	- 여러가지 경우의 수에 따라 여러 분기로 표현하는 방식을 연쇄 조건문이라고 합니다.

	- 조건문 내부에 조건문이 중첩된다면 중첩 조건문이라고 하고, 가독성이 급격히 떨어져 지양하는 편입니다.

try와 catch를 활용한 예외 처리

	- raw_input(혹은 input)을 이용해 사용자가 타이핑한 숫자를 읽는 방법을 배워으나, 상당히 위험한 방법입니다.

	- 각 자료형에 맞지 않는 입력값을 넣게 되면, 오류메시지와 함께 작동을 멈추기 때문입니다.

	- 따라서 이러한 문제를 보험처리 하기 위해 try와 catch를 사용합니다.

	- 파이썬은 try 내부에 있는 문장을 먼저 실행하고 순조롭다면, except 내부에 있는 문장을 건너뜁니다.

	- 이러한 방식을 예외 처리한다고 하며, (catching an exception) except 절에서는 단순히 오류 메시지를 출력한다.

사용된 용어 정리

	- 불 표현식 : 참 혹은 거짓을 가지는 표현식
	- 분기 : 조건문에서 대안 문장의 한 흐름
	- 연쇄 조건문 : 일련의 대안 분기가 있는 조건문
	- 비교 연산자 : 피연산자를 비교하는 연산자
	- 조건문 : 조건에 따라 명령의 흐름을 제어하는 명령문
	- 조건 : 조건문에서 어느 분기를 실행할지 결정하는 불 표현식
	- 복합문 : 머리부분과 몸통부분으로 구성된 문장. 머리부분은 콜론(:)으로 끝나고, 몸통부분은 머리부분 기준으로 들여쓰기로서 구분한다.
	- 가디언 패턴(중요) : 단락 행동을 잘 이용하도록 논리 표현식을 구성하는 것
	- 논리 연산자 : 불 표현식을 결합하는 연산자 중 하나
	- 중첩 조건문 : 하나의 조건문이 다른 조건문 분기에 나타나는 조건문
	- 역추적 : 예외 사항이 발생했을 때 실행되고, 출력되는 함수의 리스트
	- 단락 : 나머지 표현식 평가를 할 필요가 없이 최종 결과를 알기 때문에, 파이썬이 논리 표현식 평가를 진행하는 중간에 평가를 멈출 때


[jekyll-docs]: http://joey914.github.io/home
[jekyll-gh]:   https://github.com/joey914/joey914
[jekyll-talk]: https://talk.joey914.com/
